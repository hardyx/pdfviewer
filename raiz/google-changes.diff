Only in xpdf-3.02-google: aconf.h
Only in xpdf-3.02-google: COPYING-pdftotext
Only in xpdf-3.02-google: copying.rc
diff -ur xpdf-3.02/dj_make.bat xpdf-3.02-google/dj_make.bat
--- xpdf-3.02/dj_make.bat	2007-02-27 16:05:51.000000000 -0600
+++ xpdf-3.02-google/dj_make.bat	2007-06-14 16:30:07.000000000 -0500
@@ -1,81 +1,81 @@
-set CC=gcc
-set CFLAGS=-g -O2 -I.. -I..\fofi -I..\goo
-set CXX=gpp
-set CXXFLAGS=%CFLAGS%
-set LIBPROG=ar
-
-copy aconf-dj.h aconf.h
-
-cd goo
-%CXX% %CXXFLAGS% -c GHash.cc
-%CXX% %CXXFLAGS% -c GList.cc
-%CXX% %CXXFLAGS% -c GString.cc
-%CXX% %CXXFLAGS% -c gmem.cc
-%CXX% %CXXFLAGS% -c gmempp.cc
-%CXX% %CXXFLAGS% -c gfile.cc
-%CC% %CFLAGS% -c parseargs.c
-del libGoo.a
-%LIBPROG% -rc libGoo.a GHash.o GList.o GString.o gmempp.o gfile.o gmem.o parseargs.o
-
-cd ..\fofi
-%CXX% %CXXFLAGS% -c FoFiBase.cc
-%CXX% %CXXFLAGS% -c FoFiEncodings.cc
-%CXX% %CXXFLAGS% -c FoFiTrueType.cc
-%CXX% %CXXFLAGS% -c FoFiType1.cc
-%CXX% %CXXFLAGS% -c FoFiType1C.cc
-%LIBPROG% -rc libfofi.a FoFiBase.o FoFiEncodings.o FoFiTrueType.o FoFiType1.o FoFiType1C.o
-
-cd ..\xpdf
-del *.o
-%CXX% %CXXFLAGS% -c Annot.cc
-%CXX% %CXXFLAGS% -c Array.cc
-%CXX% %CXXFLAGS% -c BuiltinFont.cc
-%CXX% %CXXFLAGS% -c BuiltinFontTables.cc
-%CXX% %CXXFLAGS% -c CMap.cc
-%CXX% %CXXFLAGS% -c Catalog.cc
-%CXX% %CXXFLAGS% -c CharCodeToUnicode.cc
-%CXX% %CXXFLAGS% -c Decrypt.cc
-%CXX% %CXXFLAGS% -c Dict.cc
-%CXX% %CXXFLAGS% -c Error.cc
-%CXX% %CXXFLAGS% -c FontEncodingTables.cc
-%CXX% %CXXFLAGS% -c Function.cc
-%CXX% %CXXFLAGS% -c Gfx.cc
-%CXX% %CXXFLAGS% -c GfxFont.cc
-%CXX% %CXXFLAGS% -c GfxState.cc
-%CXX% %CXXFLAGS% -c GlobalParams.cc
-%CXX% %CXXFLAGS% -c ImageOutputDev.cc
-%CXX% %CXXFLAGS% -c JArithmeticDecoder.cc
-%CXX% %CXXFLAGS% -c JBIG2Stream.cc
-%CXX% %CXXFLAGS% -c JPXStream.cc
-%CXX% %CXXFLAGS% -c Lexer.cc
-%CXX% %CXXFLAGS% -c Link.cc
-%CXX% %CXXFLAGS% -c NameToCharCode.cc
-%CXX% %CXXFLAGS% -c Object.cc
-%CXX% %CXXFLAGS% -c Outline.cc
-%CXX% %CXXFLAGS% -c OutputDev.cc
-%CXX% %CXXFLAGS% -c PDFDoc.cc
-%CXX% %CXXFLAGS% -c PDFDocEncoding.cc
-%CXX% %CXXFLAGS% -c PSOutputDev.cc
-%CXX% %CXXFLAGS% -c PSTokenizer.cc
-%CXX% %CXXFLAGS% -c Page.cc
-%CXX% %CXXFLAGS% -c Parser.cc
-%CXX% %CXXFLAGS% -c SecurityHandler.cc
-%CXX% %CXXFLAGS% -c Stream.cc
-%CXX% %CXXFLAGS% -c TextOutputDev.cc
-%CXX% %CXXFLAGS% -c UnicodeMap.cc
-%CXX% %CXXFLAGS% -c UnicodeTypeTable.cc
-%CXX% %CXXFLAGS% -c XRef.cc
-del libxpdf.a
-%LIBPROG% -rc libxpdf.a *.o
-
-%CXX% %CXXFLAGS% -o pdftops.exe pdftops.cc libxpdf.a ..\fofi\libfofi.a ..\goo\libGoo.a
-
-%CXX% %CXXFLAGS% -o pdftotext.exe pdftotext.cc libxpdf.a ..\fofi\libfofi.a ..\goo\libGoo.a
-
-%CXX% %CXXFLAGS% -o pdfinfo.exe pdfinfo.cc libxpdf.a ..\fofi\libfofi.a ..\goo\libGoo.a
-
-%CXX% %CXXFLAGS% -o pdffonts.exe pdffonts.cc libxpdf.a ..\fofi\libfofi.a ..\goo\libGoo.a
-
-%CXX% %CXXFLAGS% -o pdfimages.exe pdfimages.cc libxpdf.a ..\fofi\libfofi.a ..\goo\libGoo.a
-
-cd ..
+set CC=gcc
+set CFLAGS=-g -O2 -I.. -I..\fofi -I..\goo
+set CXX=gpp
+set CXXFLAGS=%CFLAGS%
+set LIBPROG=ar
+
+copy aconf-dj.h aconf.h
+
+cd goo
+%CXX% %CXXFLAGS% -c GHash.cc
+%CXX% %CXXFLAGS% -c GList.cc
+%CXX% %CXXFLAGS% -c GString.cc
+%CXX% %CXXFLAGS% -c gmem.cc
+%CXX% %CXXFLAGS% -c gmempp.cc
+%CXX% %CXXFLAGS% -c gfile.cc
+%CC% %CFLAGS% -c parseargs.c
+del libGoo.a
+%LIBPROG% -rc libGoo.a GHash.o GList.o GString.o gmempp.o gfile.o gmem.o parseargs.o
+
+cd ..\fofi
+%CXX% %CXXFLAGS% -c FoFiBase.cc
+%CXX% %CXXFLAGS% -c FoFiEncodings.cc
+%CXX% %CXXFLAGS% -c FoFiTrueType.cc
+%CXX% %CXXFLAGS% -c FoFiType1.cc
+%CXX% %CXXFLAGS% -c FoFiType1C.cc
+%LIBPROG% -rc libfofi.a FoFiBase.o FoFiEncodings.o FoFiTrueType.o FoFiType1.o FoFiType1C.o
+
+cd ..\xpdf
+del *.o
+%CXX% %CXXFLAGS% -c Annot.cc
+%CXX% %CXXFLAGS% -c Array.cc
+%CXX% %CXXFLAGS% -c BuiltinFont.cc
+%CXX% %CXXFLAGS% -c BuiltinFontTables.cc
+%CXX% %CXXFLAGS% -c CMap.cc
+%CXX% %CXXFLAGS% -c Catalog.cc
+%CXX% %CXXFLAGS% -c CharCodeToUnicode.cc
+%CXX% %CXXFLAGS% -c Decrypt.cc
+%CXX% %CXXFLAGS% -c Dict.cc
+%CXX% %CXXFLAGS% -c Error.cc
+%CXX% %CXXFLAGS% -c FontEncodingTables.cc
+%CXX% %CXXFLAGS% -c Function.cc
+%CXX% %CXXFLAGS% -c Gfx.cc
+%CXX% %CXXFLAGS% -c GfxFont.cc
+%CXX% %CXXFLAGS% -c GfxState.cc
+%CXX% %CXXFLAGS% -c GlobalParams.cc
+%CXX% %CXXFLAGS% -c ImageOutputDev.cc
+%CXX% %CXXFLAGS% -c JArithmeticDecoder.cc
+%CXX% %CXXFLAGS% -c JBIG2Stream.cc
+%CXX% %CXXFLAGS% -c JPXStream.cc
+%CXX% %CXXFLAGS% -c Lexer.cc
+%CXX% %CXXFLAGS% -c Link.cc
+%CXX% %CXXFLAGS% -c NameToCharCode.cc
+%CXX% %CXXFLAGS% -c Object.cc
+%CXX% %CXXFLAGS% -c Outline.cc
+%CXX% %CXXFLAGS% -c OutputDev.cc
+%CXX% %CXXFLAGS% -c PDFDoc.cc
+%CXX% %CXXFLAGS% -c PDFDocEncoding.cc
+%CXX% %CXXFLAGS% -c PSOutputDev.cc
+%CXX% %CXXFLAGS% -c PSTokenizer.cc
+%CXX% %CXXFLAGS% -c Page.cc
+%CXX% %CXXFLAGS% -c Parser.cc
+%CXX% %CXXFLAGS% -c SecurityHandler.cc
+%CXX% %CXXFLAGS% -c Stream.cc
+%CXX% %CXXFLAGS% -c TextOutputDev.cc
+%CXX% %CXXFLAGS% -c UnicodeMap.cc
+%CXX% %CXXFLAGS% -c UnicodeTypeTable.cc
+%CXX% %CXXFLAGS% -c XRef.cc
+del libxpdf.a
+%LIBPROG% -rc libxpdf.a *.o
+
+%CXX% %CXXFLAGS% -o pdftops.exe pdftops.cc libxpdf.a ..\fofi\libfofi.a ..\goo\libGoo.a
+
+%CXX% %CXXFLAGS% -o pdftotext.exe pdftotext.cc libxpdf.a ..\fofi\libfofi.a ..\goo\libGoo.a
+
+%CXX% %CXXFLAGS% -o pdfinfo.exe pdfinfo.cc libxpdf.a ..\fofi\libfofi.a ..\goo\libGoo.a
+
+%CXX% %CXXFLAGS% -o pdffonts.exe pdffonts.cc libxpdf.a ..\fofi\libfofi.a ..\goo\libGoo.a
+
+%CXX% %CXXFLAGS% -o pdfimages.exe pdfimages.cc libxpdf.a ..\fofi\libfofi.a ..\goo\libGoo.a
+
+cd ..
diff -ur xpdf-3.02/goo/GString.cc xpdf-3.02-google/goo/GString.cc
--- xpdf-3.02/goo/GString.cc	2007-02-27 16:05:51.000000000 -0600
+++ xpdf-3.02-google/goo/GString.cc	2007-06-14 21:25:04.000000000 -0500
@@ -528,7 +528,7 @@
   if ((neg = x < 0)) {
     x = -x;
   }
-  x = floor(x * pow(10, prec) + 0.5);
+  x = floor(x * pow(static_cast<double>(10), prec) + 0.5);
   i = bufSize;
   started = !trim;
   for (j = 0; j < prec && i > 1; ++j) {
diff -ur xpdf-3.02/goo/parseargs.c xpdf-3.02-google/goo/parseargs.c
--- xpdf-3.02/goo/parseargs.c	2007-02-27 16:05:51.000000000 -0600
+++ xpdf-3.02-google/goo/parseargs.c	2007-06-14 21:30:02.000000000 -0500
@@ -150,7 +150,7 @@
 GBool isInt(char *s) {
   if (*s == '-' || *s == '+')
     ++s;
-  while (isdigit(*s & 0xff))
+  while (isdigit((unsigned char)*s & 0xff))
     ++s;
   if (*s)
     return gFalse;
@@ -163,13 +163,13 @@
   if (*s == '-' || *s == '+')
     ++s;
   n = 0;
-  while (isdigit(*s & 0xff)) {
+  while (isdigit((unsigned char)*s & 0xff)) {
     ++s;
     ++n;
   }
   if (*s == '.')
     ++s;
-  while (isdigit(*s & 0xff)) {
+  while (isdigit((unsigned char)*s & 0xff)) {
     ++s;
     ++n;
   }
@@ -178,11 +178,11 @@
     if (*s == '-' || *s == '+')
       ++s;
     n = 0;
-    if (!isdigit(*s & 0xff))
+    if (!isdigit((unsigned char)*s & 0xff))
       return gFalse;
     do {
       ++s;
-    } while (isdigit(*s & 0xff));
+    } while (isdigit((unsigned char)*s & 0xff));
   }
   if (*s)
     return gFalse;
diff -ur xpdf-3.02/ms_make.bat xpdf-3.02-google/ms_make.bat
--- xpdf-3.02/ms_make.bat	2007-02-27 16:05:51.000000000 -0600
+++ xpdf-3.02-google/ms_make.bat	2007-06-14 16:30:11.000000000 -0500
@@ -1,118 +1,118 @@
-set CC=cl
-set CFLAGS=/DWIN32 /I.. /I..\goo /I..\fofi /O2 /nologo
-set CXX=cl
-set CXXFLAGS=%CFLAGS% /TP
-set LIBPROG=lib
-set LINKFLAGS=/MT /nologo
-
-copy aconf-win32.h aconf.h
-
-cd goo
-%CXX% %CXXFLAGS% /c GHash.cc
-%CXX% %CXXFLAGS% /c GList.cc
-%CXX% %CXXFLAGS% /c GString.cc
-%CXX% %CXXFLAGS% /c gmem.cc
-%CXX% %CXXFLAGS% /c gmempp.cc
-%CXX% %CXXFLAGS% /c gfile.cc
-%CC% %CFLAGS% /c parseargs.c
-%LIBPROG% /nologo /out:Goo.lib GHash.obj GList.obj GString.obj gmempp.obj gfile.obj gmem.obj parseargs.obj
-
-cd ..\fofi
-%CXX% %CXXFLAGS% /c FoFiBase.cc
-%CXX% %CXXFLAGS% /c FoFiEncodings.cc
-%CXX% %CXXFLAGS% /c FoFiTrueType.cc
-%CXX% %CXXFLAGS% /c FoFiType1.cc
-%CXX% %CXXFLAGS% /c FoFiType1C.cc
-%LIBPROG% /nologo /out:fofi.lib FoFiBase.obj FoFiEncodings.obj FoFiTrueType.obj FoFiType1.obj FoFiType1C.obj
-
-cd ..\xpdf
-%CXX% %CXXFLAGS% /c Annot.cc
-%CXX% %CXXFLAGS% /c Array.cc
-%CXX% %CXXFLAGS% /c BuiltinFont.cc
-%CXX% %CXXFLAGS% /c BuiltinFontTables.cc
-%CXX% %CXXFLAGS% /c CMap.cc
-%CXX% %CXXFLAGS% /c Catalog.cc
-%CXX% %CXXFLAGS% /c CharCodeToUnicode.cc
-%CXX% %CXXFLAGS% /c Decrypt.cc
-%CXX% %CXXFLAGS% /c Dict.cc
-%CXX% %CXXFLAGS% /c Error.cc
-%CXX% %CXXFLAGS% /c FontEncodingTables.cc
-%CXX% %CXXFLAGS% /c Function.cc
-%CXX% %CXXFLAGS% /c Gfx.cc
-%CXX% %CXXFLAGS% /c GfxFont.cc
-%CXX% %CXXFLAGS% /c GfxState.cc
-%CXX% %CXXFLAGS% /c GlobalParams.cc
-%CXX% %CXXFLAGS% /c ImageOutputDev.cc
-%CXX% %CXXFLAGS% /c JArithmeticDecoder.cc
-%CXX% %CXXFLAGS% /c JBIG2Stream.cc
-%CXX% %CXXFLAGS% /c JPXStream.cc
-%CXX% %CXXFLAGS% /c Lexer.cc
-%CXX% %CXXFLAGS% /c Link.cc
-%CXX% %CXXFLAGS% /c NameToCharCode.cc
-%CXX% %CXXFLAGS% /c Object.cc
-%CXX% %CXXFLAGS% /c Outline.cc
-%CXX% %CXXFLAGS% /c OutputDev.cc
-%CXX% %CXXFLAGS% /c PDFDoc.cc
-%CXX% %CXXFLAGS% /c PDFDocEncoding.cc
-%CXX% %CXXFLAGS% /c PSOutputDev.cc
-%CXX% %CXXFLAGS% /c PSTokenizer.cc
-%CXX% %CXXFLAGS% /c Page.cc
-%CXX% %CXXFLAGS% /c Parser.cc
-%CXX% %CXXFLAGS% /c SecurityHandler.cc
-%CXX% %CXXFLAGS% /c Stream.cc
-%CXX% %CXXFLAGS% /c TextOutputDev.cc
-%CXX% %CXXFLAGS% /c UnicodeMap.cc
-%CXX% %CXXFLAGS% /c UnicodeTypeTable.cc
-%CXX% %CXXFLAGS% /c XRef.cc
-%CXX% %CXXFLAGS% /c pdftops.cc
-%CXX% %CXXFLAGS% /c pdftotext.cc
-%CXX% %CXXFLAGS% /c pdfinfo.cc
-%CXX% %CXXFLAGS% /c pdffonts.cc
-%CXX% %CXXFLAGS% /c pdfimages.cc
-
-%CXX% %LINKFLAGS% /Fepdftops.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSOutputDev.obj PSTokenizer.obj SecurityHandler.obj Stream.obj UnicodeMap.obj XRef.obj pdftops.obj ..\fofi\fofi.lib ..\goo\Goo.lib shell32.lib user32.lib gdi32.lib advapi32.lib
-
-%CXX% %LINKFLAGS% /Fepdftotext.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSTokenizer.obj SecurityHandler.obj Stream.obj TextOutputDev.obj UnicodeMap.obj UnicodeTypeTable.obj XRef.obj pdftotext.obj ..\fofi\fofi.lib ..\goo\Goo.lib shell32.lib user32.lib gdi32.lib advapi32.lib
-
-%CXX% %LINKFLAGS% /Fepdfinfo.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSTokenizer.obj SecurityHandler.obj Stream.obj UnicodeMap.obj XRef.obj pdfinfo.obj ..\fofi\fofi.lib ..\goo\Goo.lib shell32.lib user32.lib gdi32.lib advapi32.lib
-
-%CXX% %LINKFLAGS% /Fepdffonts.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSTokenizer.obj SecurityHandler.obj Stream.obj UnicodeMap.obj XRef.obj pdffonts.obj ..\fofi\fofi.lib ..\goo\Goo.lib shell32.lib user32.lib gdi32.lib advapi32.lib
-
-%CXX% %LINKFLAGS% /Fepdfimages.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj ImageOutputDev.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSTokenizer.obj SecurityHandler.obj Stream.obj UnicodeMap.obj XRef.obj pdfimages.obj ..\fofi\fofi.lib ..\goo\Goo.lib shell32.lib user32.lib gdi32.lib advapi32.lib
-
-cd ..
-
-rem --- This part will only work if you have FreeType installed ---
-
-set FT2DIR=..\freetype-2.3.1
-set CXXFLAGS=%CXXFLAGS% /I..\splash /I%FT2DIR%\include
-
-cd splash
-%CXX% %CXXFLAGS% /c Splash.cc
-%CXX% %CXXFLAGS% /c SplashBitmap.cc
-%CXX% %CXXFLAGS% /c SplashClip.cc
-%CXX% %CXXFLAGS% /c SplashFTFont.cc
-%CXX% %CXXFLAGS% /c SplashFTFontEngine.cc
-%CXX% %CXXFLAGS% /c SplashFTFontFile.cc
-%CXX% %CXXFLAGS% /c SplashFont.cc
-%CXX% %CXXFLAGS% /c SplashFontEngine.cc
-%CXX% %CXXFLAGS% /c SplashFontFile.cc
-%CXX% %CXXFLAGS% /c SplashFontFileID.cc
-%CXX% %CXXFLAGS% /c SplashPath.cc
-%CXX% %CXXFLAGS% /c SplashPattern.cc
-%CXX% %CXXFLAGS% /c SplashScreen.cc
-%CXX% %CXXFLAGS% /c SplashState.cc
-%CXX% %CXXFLAGS% /c SplashT1Font.cc
-%CXX% %CXXFLAGS% /c SplashT1FontEngine.cc
-%CXX% %CXXFLAGS% /c SplashT1FontFile.cc
-%CXX% %CXXFLAGS% /c SplashXPath.cc
-%CXX% %CXXFLAGS% /c SplashXPathScanner.cc
-%LIBPROG% /nologo /out:splash.lib Splash.obj SplashBitmap.obj SplashClip.obj SplashFTFont.obj SplashFTFontEngine.obj SplashFTFontFile.obj SplashFont.obj SplashFontEngine.obj SplashFontFile.obj SplashFontFileID.obj SplashPath.obj SplashPattern.obj SplashScreen.obj SplashState.obj SplashT1Font.obj SplashT1FontEngine.obj SplashT1FontFile.obj SplashXPath.obj SplashXPathScanner.obj
-
-cd ..\xpdf
-%CXX% %CXXFLAGS% /c SplashOutputDev.cc
-%CXX% %CXXFLAGS% /c pdftoppm.cc
-
-%CXX% %LINKFLAGS% /Fepdftoppm.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSTokenizer.obj SecurityHandler.obj SplashOutputDev.obj Stream.obj UnicodeMap.obj UnicodeTypeTable.obj XRef.obj pdftoppm.obj ..\splash\splash.lib ..\fofi\fofi.lib ..\goo\Goo.lib %FT2DIR%\freetype2.lib shell32.lib user32.lib gdi32.lib advapi32.lib
-
-cd ..
+set CC=cl
+set CFLAGS=/DWIN32 /I.. /I..\goo /I..\fofi /O2 /nologo
+set CXX=cl
+set CXXFLAGS=%CFLAGS% /TP
+set LIBPROG=lib
+set LINKFLAGS=/MT /nologo
+
+copy aconf-win32.h aconf.h
+
+cd goo
+%CXX% %CXXFLAGS% /c GHash.cc
+%CXX% %CXXFLAGS% /c GList.cc
+%CXX% %CXXFLAGS% /c GString.cc
+%CXX% %CXXFLAGS% /c gmem.cc
+%CXX% %CXXFLAGS% /c gmempp.cc
+%CXX% %CXXFLAGS% /c gfile.cc
+%CC% %CFLAGS% /c parseargs.c
+%LIBPROG% /nologo /out:Goo.lib GHash.obj GList.obj GString.obj gmempp.obj gfile.obj gmem.obj parseargs.obj
+
+cd ..\fofi
+%CXX% %CXXFLAGS% /c FoFiBase.cc
+%CXX% %CXXFLAGS% /c FoFiEncodings.cc
+%CXX% %CXXFLAGS% /c FoFiTrueType.cc
+%CXX% %CXXFLAGS% /c FoFiType1.cc
+%CXX% %CXXFLAGS% /c FoFiType1C.cc
+%LIBPROG% /nologo /out:fofi.lib FoFiBase.obj FoFiEncodings.obj FoFiTrueType.obj FoFiType1.obj FoFiType1C.obj
+
+cd ..\xpdf
+%CXX% %CXXFLAGS% /c Annot.cc
+%CXX% %CXXFLAGS% /c Array.cc
+%CXX% %CXXFLAGS% /c BuiltinFont.cc
+%CXX% %CXXFLAGS% /c BuiltinFontTables.cc
+%CXX% %CXXFLAGS% /c CMap.cc
+%CXX% %CXXFLAGS% /c Catalog.cc
+%CXX% %CXXFLAGS% /c CharCodeToUnicode.cc
+%CXX% %CXXFLAGS% /c Decrypt.cc
+%CXX% %CXXFLAGS% /c Dict.cc
+%CXX% %CXXFLAGS% /c Error.cc
+%CXX% %CXXFLAGS% /c FontEncodingTables.cc
+%CXX% %CXXFLAGS% /c Function.cc
+%CXX% %CXXFLAGS% /c Gfx.cc
+%CXX% %CXXFLAGS% /c GfxFont.cc
+%CXX% %CXXFLAGS% /c GfxState.cc
+%CXX% %CXXFLAGS% /c GlobalParams.cc
+%CXX% %CXXFLAGS% /c ImageOutputDev.cc
+%CXX% %CXXFLAGS% /c JArithmeticDecoder.cc
+%CXX% %CXXFLAGS% /c JBIG2Stream.cc
+%CXX% %CXXFLAGS% /c JPXStream.cc
+%CXX% %CXXFLAGS% /c Lexer.cc
+%CXX% %CXXFLAGS% /c Link.cc
+%CXX% %CXXFLAGS% /c NameToCharCode.cc
+%CXX% %CXXFLAGS% /c Object.cc
+%CXX% %CXXFLAGS% /c Outline.cc
+%CXX% %CXXFLAGS% /c OutputDev.cc
+%CXX% %CXXFLAGS% /c PDFDoc.cc
+%CXX% %CXXFLAGS% /c PDFDocEncoding.cc
+%CXX% %CXXFLAGS% /c PSOutputDev.cc
+%CXX% %CXXFLAGS% /c PSTokenizer.cc
+%CXX% %CXXFLAGS% /c Page.cc
+%CXX% %CXXFLAGS% /c Parser.cc
+%CXX% %CXXFLAGS% /c SecurityHandler.cc
+%CXX% %CXXFLAGS% /c Stream.cc
+%CXX% %CXXFLAGS% /c TextOutputDev.cc
+%CXX% %CXXFLAGS% /c UnicodeMap.cc
+%CXX% %CXXFLAGS% /c UnicodeTypeTable.cc
+%CXX% %CXXFLAGS% /c XRef.cc
+%CXX% %CXXFLAGS% /c pdftops.cc
+%CXX% %CXXFLAGS% /c pdftotext.cc
+%CXX% %CXXFLAGS% /c pdfinfo.cc
+%CXX% %CXXFLAGS% /c pdffonts.cc
+%CXX% %CXXFLAGS% /c pdfimages.cc
+
+%CXX% %LINKFLAGS% /Fepdftops.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSOutputDev.obj PSTokenizer.obj SecurityHandler.obj Stream.obj UnicodeMap.obj XRef.obj pdftops.obj ..\fofi\fofi.lib ..\goo\Goo.lib shell32.lib user32.lib gdi32.lib advapi32.lib
+
+%CXX% %LINKFLAGS% /Fepdftotext.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSTokenizer.obj SecurityHandler.obj Stream.obj TextOutputDev.obj UnicodeMap.obj UnicodeTypeTable.obj XRef.obj pdftotext.obj ..\fofi\fofi.lib ..\goo\Goo.lib shell32.lib user32.lib gdi32.lib advapi32.lib
+
+%CXX% %LINKFLAGS% /Fepdfinfo.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSTokenizer.obj SecurityHandler.obj Stream.obj UnicodeMap.obj XRef.obj pdfinfo.obj ..\fofi\fofi.lib ..\goo\Goo.lib shell32.lib user32.lib gdi32.lib advapi32.lib
+
+%CXX% %LINKFLAGS% /Fepdffonts.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSTokenizer.obj SecurityHandler.obj Stream.obj UnicodeMap.obj XRef.obj pdffonts.obj ..\fofi\fofi.lib ..\goo\Goo.lib shell32.lib user32.lib gdi32.lib advapi32.lib
+
+%CXX% %LINKFLAGS% /Fepdfimages.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj ImageOutputDev.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSTokenizer.obj SecurityHandler.obj Stream.obj UnicodeMap.obj XRef.obj pdfimages.obj ..\fofi\fofi.lib ..\goo\Goo.lib shell32.lib user32.lib gdi32.lib advapi32.lib
+
+cd ..
+
+rem --- This part will only work if you have FreeType installed ---
+
+set FT2DIR=..\freetype-2.3.1
+set CXXFLAGS=%CXXFLAGS% /I..\splash /I%FT2DIR%\include
+
+cd splash
+%CXX% %CXXFLAGS% /c Splash.cc
+%CXX% %CXXFLAGS% /c SplashBitmap.cc
+%CXX% %CXXFLAGS% /c SplashClip.cc
+%CXX% %CXXFLAGS% /c SplashFTFont.cc
+%CXX% %CXXFLAGS% /c SplashFTFontEngine.cc
+%CXX% %CXXFLAGS% /c SplashFTFontFile.cc
+%CXX% %CXXFLAGS% /c SplashFont.cc
+%CXX% %CXXFLAGS% /c SplashFontEngine.cc
+%CXX% %CXXFLAGS% /c SplashFontFile.cc
+%CXX% %CXXFLAGS% /c SplashFontFileID.cc
+%CXX% %CXXFLAGS% /c SplashPath.cc
+%CXX% %CXXFLAGS% /c SplashPattern.cc
+%CXX% %CXXFLAGS% /c SplashScreen.cc
+%CXX% %CXXFLAGS% /c SplashState.cc
+%CXX% %CXXFLAGS% /c SplashT1Font.cc
+%CXX% %CXXFLAGS% /c SplashT1FontEngine.cc
+%CXX% %CXXFLAGS% /c SplashT1FontFile.cc
+%CXX% %CXXFLAGS% /c SplashXPath.cc
+%CXX% %CXXFLAGS% /c SplashXPathScanner.cc
+%LIBPROG% /nologo /out:splash.lib Splash.obj SplashBitmap.obj SplashClip.obj SplashFTFont.obj SplashFTFontEngine.obj SplashFTFontFile.obj SplashFont.obj SplashFontEngine.obj SplashFontFile.obj SplashFontFileID.obj SplashPath.obj SplashPattern.obj SplashScreen.obj SplashState.obj SplashT1Font.obj SplashT1FontEngine.obj SplashT1FontFile.obj SplashXPath.obj SplashXPathScanner.obj
+
+cd ..\xpdf
+%CXX% %CXXFLAGS% /c SplashOutputDev.cc
+%CXX% %CXXFLAGS% /c pdftoppm.cc
+
+%CXX% %LINKFLAGS% /Fepdftoppm.exe Annot.obj Array.obj BuiltinFont.obj BuiltinFontTables.obj Catalog.obj CharCodeToUnicode.obj CMap.obj Decrypt.obj Dict.obj Error.obj FontEncodingTables.obj Function.obj Gfx.obj GfxFont.obj GfxState.obj GlobalParams.obj JArithmeticDecoder.obj JBIG2Stream.obj JPXStream.obj Lexer.obj Link.obj NameToCharCode.obj Object.obj Outline.obj OutputDev.obj Page.obj Parser.obj PDFDoc.obj PDFDocEncoding.obj PSTokenizer.obj SecurityHandler.obj SplashOutputDev.obj Stream.obj UnicodeMap.obj UnicodeTypeTable.obj XRef.obj pdftoppm.obj ..\splash\splash.lib ..\fofi\fofi.lib ..\goo\Goo.lib %FT2DIR%\freetype2.lib shell32.lib user32.lib gdi32.lib advapi32.lib
+
+cd ..
diff -ur xpdf-3.02/xpdf/Function.cc xpdf-3.02-google/xpdf/Function.cc
--- xpdf-3.02/xpdf/Function.cc	2007-02-27 16:05:52.000000000 -0600
+++ xpdf-3.02-google/xpdf/Function.cc	2007-06-14 21:30:02.000000000 -0500
@@ -1097,7 +1097,7 @@
       return gFalse;
     }
     p = tok->getCString();
-    if (isdigit(*p) || *p == '.' || *p == '-') {
+    if (isdigit((unsigned char)*p) || *p == '.' || *p == '-') {
       isReal = gFalse;
       for (++p; *p; ++p) {
 	if (*p == '.') {
@@ -1222,17 +1222,17 @@
       }
     } else if (c == '%') {
       comment = gTrue;
-    } else if (!isspace(c)) {
+      } else if (!isspace((unsigned char)c)) {
       break;
     }
   }
   if (c == '{' || c == '}') {
     s->append((char)c);
-  } else if (isdigit(c) || c == '.' || c == '-') {
+  } else if (isdigit((unsigned char)c) || c == '.' || c == '-') {
     while (1) {
       s->append((char)c);
       c = str->lookChar();
-      if (c == EOF || !(isdigit(c) || c == '.' || c == '-')) {
+      if (c == EOF || !(isdigit((unsigned char)c) || c == '.' || c == '-')) {
 	break;
       }
       str->getChar();
@@ -1242,7 +1242,7 @@
     while (1) {
       s->append((char)c);
       c = str->lookChar();
-      if (c == EOF || !isalnum(c)) {
+      if (c == EOF || !isalnum((unsigned char)c)) {
 	break;
       }
       str->getChar();
diff -ur xpdf-3.02/xpdf/GfxFont.cc xpdf-3.02-google/xpdf/GfxFont.cc
--- xpdf-3.02/xpdf/GfxFont.cc	2007-02-27 16:05:52.000000000 -0600
+++ xpdf-3.02-google/xpdf/GfxFont.cc	2007-06-14 21:30:02.000000000 -0500
@@ -712,14 +712,14 @@
 	// name that looks like 'Axx' or 'xx', where 'A' is any letter
 	// and 'xx' is two hex digits
 	if ((strlen(charName) == 3 &&
-	     isalpha(charName[0]) &&
-	     isxdigit(charName[1]) && isxdigit(charName[2]) &&
+	     isalpha((unsigned char)charName[0]) &&
+	     isxdigit((unsigned char)charName[1]) && isxdigit((unsigned char)charName[2]) &&
 	     ((charName[1] >= 'a' && charName[1] <= 'f') ||
 	      (charName[1] >= 'A' && charName[1] <= 'F') ||
 	      (charName[2] >= 'a' && charName[2] <= 'f') ||
 	      (charName[2] >= 'A' && charName[2] <= 'F'))) ||
 	    (strlen(charName) == 2 &&
-	     isxdigit(charName[0]) && isxdigit(charName[1]) &&
+	     isxdigit((unsigned char)charName[0]) && isxdigit((unsigned char)charName[1]) &&
 	     ((charName[0] >= 'a' && charName[0] <= 'f') ||
 	      (charName[0] >= 'A' && charName[0] <= 'F') ||
 	      (charName[1] >= 'a' && charName[1] <= 'f') ||
@@ -743,20 +743,20 @@
 	  strcmp(charName, ".notdef")) {
 	n = strlen(charName);
 	code2 = -1;
-	if (hex && n == 3 && isalpha(charName[0]) &&
-	    isxdigit(charName[1]) && isxdigit(charName[2])) {
+	if (hex && n == 3 && isalpha((unsigned char)charName[0]) &&
+	    isxdigit((unsigned char)charName[1]) && isxdigit((unsigned char)charName[2])) {
 	  sscanf(charName+1, "%x", &code2);
 	} else if (hex && n == 2 &&
-		   isxdigit(charName[0]) && isxdigit(charName[1])) {
+		   isxdigit((unsigned char)charName[0]) && isxdigit((unsigned char)charName[1])) {
 	  sscanf(charName, "%x", &code2);
 	} else if (!hex && n >= 2 && n <= 4 &&
-		   isdigit(charName[0]) && isdigit(charName[1])) {
+		   isdigit((unsigned char)charName[0]) && isdigit((unsigned char)charName[1])) {
 	  code2 = atoi(charName);
 	} else if (n >= 3 && n <= 5 &&
-		   isdigit(charName[1]) && isdigit(charName[2])) {
+		   isdigit((unsigned char)charName[1]) && isdigit((unsigned char)charName[2])) {
 	  code2 = atoi(charName+1);
 	} else if (n >= 4 && n <= 6 &&
-		   isdigit(charName[2]) && isdigit(charName[3])) {
+		   isdigit((unsigned char)charName[2]) && isdigit((unsigned char)charName[3])) {
 	  code2 = atoi(charName+2);
 	}
 	if (code2 >= 0 && code2 <= 0xff) {
diff -ur xpdf-3.02/xpdf/GlobalParams.cc xpdf-3.02-google/xpdf/GlobalParams.cc
--- xpdf-3.02/xpdf/GlobalParams.cc	2007-02-27 16:05:52.000000000 -0600
+++ xpdf-3.02-google/xpdf/GlobalParams.cc	2007-06-14 21:30:02.000000000 -0500
@@ -748,6 +748,43 @@
   map = new UnicodeMap("UCS-2", gTrue, &mapUCS2);
   residentUnicodeMaps->add(map->getEncodingName(), map);
 
+#if defined(WIN32) && !defined(__CYGWIN32__)
+  // GD does not use xpdfrc file. We seach for *.cidToUnicode file under the 
+  // same dir of pdftotext.exe. The file name must be the charset name.
+  char buf[512];
+  i = GetModuleFileName(NULL, buf, sizeof(buf));
+  if (i <= 0 || i >= sizeof(buf)) {
+    // error or path too long for buffer - just use the current dir
+    buf[0] = '\0';
+  }
+  GString *path = grabPath(buf);
+  GString mask(path);
+  appendToPath(&mask, "*.cidToUnicode");
+
+  WIN32_FIND_DATA wfd;
+  HANDLE h = FindFirstFile(mask.getCString(), &wfd);
+  if (h != INVALID_HANDLE_VALUE) {
+    do {
+      GString filename(path);
+      appendToPath(&filename, wfd.cFileName);
+
+      char *p = strrchr(wfd.cFileName, '.');
+      if (p)
+        *p = 0;
+      GString collection(wfd.cFileName);
+
+      GString *old;
+      if ((old = (GString *)cidToUnicodes->remove(&collection))) {
+        delete old;
+      }
+      cidToUnicodes->add(collection.copy(), filename.copy());
+    } while (FindNextFile(h, &wfd));
+    FindClose(h);
+  }
+
+  delete path;
+#endif  // defined(WIN32) && !defined(__CYGWIN32__)
+ 
   // look for a user config file, then a system-wide config file
   f = NULL;
   fileName = NULL;
@@ -931,7 +968,7 @@
   tokens = new GList();
   p1 = buf;
   while (*p1) {
-    for (; *p1 && isspace(*p1); ++p1) ;
+    for (; *p1 && isspace((unsigned char)*p1); ++p1) ;
     if (!*p1) {
       break;
     }
@@ -939,7 +976,7 @@
       for (p2 = p1 + 1; *p2 && *p2 != *p1; ++p2) ;
       ++p1;
     } else {
-      for (p2 = p1 + 1; *p2 && !isspace(*p2); ++p2) ;
+      for (p2 = p1 + 1; *p2 && !isspace((unsigned char)*p2); ++p2) ;
     }
     tokens->append(new GString(p1, p2 - p1));
     p1 = *p2 ? p2 + 1 : p2;
diff -ur xpdf-3.02/xpdf/Lexer.cc xpdf-3.02-google/xpdf/Lexer.cc
--- xpdf-3.02/xpdf/Lexer.cc	2007-02-27 16:05:52.000000000 -0600
+++ xpdf-3.02-google/xpdf/Lexer.cc	2007-06-14 21:30:02.000000000 -0500
@@ -152,7 +152,7 @@
     }
     while (1) {
       c = lookChar();
-      if (isdigit(c)) {
+      if (isdigit((unsigned char)c)) {
 	getChar();
 	xi = xi * 10 + (c - '0');
       } else if (c == '.') {
@@ -178,7 +178,7 @@
 	getChar();
 	continue;
       }
-      if (!isdigit(c)) {
+      if (!isdigit((unsigned char)c)) {
 	break;
       }
       getChar();
diff -ur xpdf-3.02/xpdf/pdftotext.cc xpdf-3.02-google/xpdf/pdftotext.cc
--- xpdf-3.02/xpdf/pdftotext.cc	2007-02-27 16:05:52.000000000 -0600
+++ xpdf-3.02-google/xpdf/pdftotext.cc	2007-06-30 03:30:04.000000000 -0500
@@ -13,6 +13,7 @@
 #include <string.h>
 #include "parseargs.h"
 #include "GString.h"
+#include "gfile.h"
 #include "gmem.h"
 #include "GlobalParams.h"
 #include "Object.h"
@@ -86,6 +87,63 @@
   {NULL}
 };
 
+void EnsureGplFileExists() {
+#if defined(WIN32) && !defined(__CYGWIN32__)
+  char buf[512];
+  int len = GetModuleFileName(NULL, buf, sizeof(buf));
+  if (len <= 0 || len >= sizeof(buf))
+    return;
+
+  GString *path = grabPath(buf);
+  if (!path)
+    return;
+
+  GString file_path(path);
+  appendToPath(&file_path, "COPYING");
+  delete path;
+
+  // Test if the file exists already
+  WIN32_FILE_ATTRIBUTE_DATA attrs;
+  if (GetFileAttributesEx(file_path.getCString(),
+     GetFileExInfoStandard, &attrs) != FALSE)
+    return;
+
+  // Extract the COPYING from resource
+  HMODULE module_handle = GetModuleHandle(NULL);
+  HRSRC res_handle = FindResource(module_handle, 
+                                  "COPYING",
+                                  "FILE");
+  if (res_handle == NULL)
+    return;
+
+  // Load the resource. Calling LockResource is unnecessary on Win2K and up.
+  char* output_buffer = static_cast<char*>(LoadResource(module_handle, 
+    res_handle));
+  DWORD output_buffer_size = SizeofResource(module_handle, res_handle);
+
+  if ((output_buffer == NULL) || (output_buffer_size == 0))
+    return;
+
+  // create a file and fill with the resource data
+  HANDLE file_handle = CreateFile(file_path.getCString(), // name of the file
+                                  GENERIC_WRITE,    // access (read-write) mode
+                                  FILE_SHARE_READ,  // share mode
+                                  NULL,             // security attributes
+                                  CREATE_ALWAYS,    // how to create
+                                  0,                // file attributes
+                                  NULL);            // file w/attributes to copy
+  if (file_handle == INVALID_HANDLE_VALUE)
+    return;
+
+  DWORD bytes_written = 0;
+  HRESULT hr = S_OK;
+  WriteFile(file_handle, output_buffer, output_buffer_size, 
+            &bytes_written, NULL);
+
+  CloseHandle(file_handle);
+#endif // defined(WIN32) && !defined(__CYGWIN32__)
+}
+
 int main(int argc, char *argv[]) {
   PDFDoc *doc;
   GString *fileName;
@@ -101,6 +159,8 @@
 
   exitCode = 99;
 
+  EnsureGplFileExists();
+
   // parse args
   ok = parseArgs(argDesc, &argc, argv);
   if (!ok || argc < 2 || argc > 3 || printVersion || printHelp) {
diff -ur xpdf-3.02/xpdf/Stream.cc xpdf-3.02-google/xpdf/Stream.cc
--- xpdf-3.02/xpdf/Stream.cc	2007-02-27 16:05:52.000000000 -0600
+++ xpdf-3.02-google/xpdf/Stream.cc	2007-07-03 11:32:59.000000000 -0500
@@ -452,13 +452,36 @@
 
 GBool StreamPredictor::getNextLine() {
   int curPred;
-  Guchar upLeftBuf[gfxColorMaxComps * 2 + 1];
+  const int upLeftBufSize = gfxColorMaxComps * 2 + 1;
+  Guchar upLeftBuf[upLeftBufSize];
   int left, up, upLeft, p, pa, pb, pc;
   int c;
   Gulong inBuf, outBuf, bitMask;
   int inBits, outBits;
   int i, j, k, kk;
 
+  // ---------------
+
+  // security report and fix:
+  //
+  // xpdf's Stream.cc file, in StreamPredictor::getNextLine, doesn't do
+  // sanity checks on the size of the pixBytes variable before using it
+  // to zero memory in the upLeftBuf buffer (which is a stack
+  // buffer). pixBytes is set to (nComps * nBits + 7) >> 3 in the
+  // StreamPredictor constructor. nComps and nBits are both parsed from
+  // the file (as "colors" and "bits" respectively) in
+  // Stream::makeFilter.  Users can therefore modify the colors and bits
+  // data in the file to zero an arbitrary number of bytes on the stack.
+  // The upLeftBuf buffer is further populated in the rest of the
+  // getNextLine function.
+
+  if (pixBytes + 1 > upLeftBufSize ||
+      nComps + 1 > upLeftBufSize) {
+    return gFalse;
+  }
+
+  // ---------------
+
   // get PNG optimum predictor number
   if (predictor >= 10) {
     if ((curPred = str->getRawChar()) == EOF) {
@@ -838,7 +861,7 @@
   }
   do {
     c1 = str->getChar();
-  } while (isspace(c1));
+  } while (isspace((unsigned char)c1));
   if (c1 == '>') {
     eof = gTrue;
     buf = EOF;
@@ -846,7 +869,7 @@
   }
   do {
     c2 = str->getChar();
-  } while (isspace(c2));
+  } while (isspace((unsigned char)c2));
   if (c2 == '>') {
     eof = gTrue;
     c2 = '0';
diff -ur xpdf-3.02/xpdf/XPDFViewer.cc xpdf-3.02-google/xpdf/XPDFViewer.cc
--- xpdf-3.02/xpdf/XPDFViewer.cc	2007-02-27 16:05:52.000000000 -0600
+++ xpdf-3.02-google/xpdf/XPDFViewer.cc	2007-06-14 21:30:02.000000000 -0500
@@ -661,7 +661,7 @@
     args[i] = NULL;
   }
   p0 = cmd->getCString();
-  for (p1 = p0; *p1 && isalnum(*p1); ++p1) ;
+  for (p1 = p0; *p1 && isalnum((unsigned char)*p1); ++p1) ;
   if (p1 == p0) {
     goto err1;
   }
@@ -2548,7 +2548,7 @@
   }
   s = XmTextFieldGetString(viewer->pageNumText);
   for (p = s; *p; ++p) {
-    if (!isdigit(*p)) {
+    if (!isdigit((unsigned char)*p)) {
       goto err;
     }
   }
diff -ur xpdf-3.02/xpdf/XRef.cc xpdf-3.02-google/xpdf/XRef.cc
--- xpdf-3.02/xpdf/XRef.cc	2007-02-27 16:05:52.000000000 -0600
+++ xpdf-3.02-google/xpdf/XRef.cc	2007-06-14 21:30:02.000000000 -0500
@@ -288,7 +288,7 @@
   if (i < 0) {
     return 0;
   }
-  for (p = &buf[i+9]; isspace(*p); ++p) ;
+  for (p = &buf[i+9]; isspace((unsigned char)*p); ++p) ;
   lastXRefPos = strToUnsigned(p);
 
   return lastXRefPos;
@@ -687,25 +687,25 @@
       delete parser;
 
     // look for object
-    } else if (isdigit(*p)) {
+    } else if (isdigit((unsigned char)*p)) {
       num = atoi(p);
       if (num > 0) {
 	do {
 	  ++p;
-	} while (*p && isdigit(*p));
-	if (isspace(*p)) {
+	} while (*p && isdigit((unsigned char)*p));
+	if (isspace((unsigned char)*p)) {
 	  do {
 	    ++p;
-	  } while (*p && isspace(*p));
-	  if (isdigit(*p)) {
+	  } while (*p && isspace((unsigned char)*p));
+	  if (isdigit((unsigned char)*p)) {
 	    gen = atoi(p);
 	    do {
 	      ++p;
-	    } while (*p && isdigit(*p));
-	    if (isspace(*p)) {
+	    } while (*p && isdigit((unsigned char)*p));
+	    if (isspace((unsigned char)*p)) {
 	      do {
 		++p;
-	      } while (*p && isspace(*p));
+	      } while (*p && isspace((unsigned char)*p));
 	      if (!strncmp(p, "obj", 3)) {
 		if (num >= size) {
 		  newSize = (num + 1 + 255) & ~255;
@@ -889,7 +889,7 @@
   int i;
 
   x = 0;
-  for (p = s, i = 0; *p && isdigit(*p) && i < 10; ++p, ++i) {
+  for (p = s, i = 0; *p && isdigit((unsigned char)*p) && i < 10; ++p, ++i) {
     x = 10 * x + (*p - '0');
   }
   return x;
